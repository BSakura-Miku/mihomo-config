# Loon自用配置
# 作者: https://github.com/BSakura-Miku
# Ver.1.2 修改时间: 2025-08-18
# Loon官方文档：https://nsloon.app/docs/intro
# Loon教程链接：https://coffee-elderberry-22b.notion.site/Loon-71747252d5054551a8cd10924064899c
# Loon第三方知识库：https://t.me/ibilibili/581
# Loon规则GitHub：https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Loon

# 更多的插件可以前往此处安装 https://github.com/luestr/ProxyResource/blob/main/README.md

[General]
ip-mode = dual                                          
# IP 模式：ipv4-only: 只使用 IPv4 进行请求，不发起 AAAA 的 DNS 查询，拒绝所有 IPv6 连接
# dual: 并发发起 A 和 AAAA 的 DNS 查询，优先使用响应速度更快的结果，不判断是否是IPv4或者IPv6
# ipv4-preferred: 并发发起 A 和 AAAA 的 DNS 查询，优先使用 IPv6 结果，如无 IPv6 记录则切换到 IPv4 结果
# ipv6-Preferred: 并发发起 A 和 AAAA 的 DNS 查询，优先使用 IPv4 结果，如无 IPv4 记录则切换到 IPv6 结果
ipv6-vif = auto                                             # 是否启用TUN IPv6 转发
dns-server = system                                         # 使用系统 DNS（即手机当前网络的 DNS）
sni-sniffing = true                                         # 开启 SNI 嗅探（可用于识别 HTTPS 流量域名）
disable-stun = false                                        # 是否禁用 STUN 协议（false 表示允许，用于 P2P/VoIP）
dns-reject-mode = Request                                   # 域名拦截行为 
# DNS：使用 LoopbackIP、No Answer 或 NXDomain 的方式阻止 DNS 查询以达到拦截请求的目的
# Request：在请求转发阶段拦截请求
# > 在 HTTP Proxy & TUN 模式下由于拦截到的系统 DNS 较少，大部分的拦截都会在转发请求阶段进行。                           
domain-reject-mode = DNS                                    # 域名拦截模式：通过 DNS 拦截
udp-fallback-mode = REJECT                                  # UDP 回落模式：直接拒绝
# Wi-Fi 访问
allow-wifi-access = false                                   # 是否允许同局域网其他设备通过 Wi-Fi 访问代理（false 禁止）
wifi-access-http-port = 7222                                # Wi-Fi 下本地 HTTP 代理端口（默认 7222）
wifi-access-socks5-port = 7221                              # Wi-Fi 下本地 SOCKS5 代理端口（默认 7221）

interface-mode = auto                                       # 网络接口模式：自动选择
# Auto: 系统自动分配
# Cellular: 在WiFi和蜂窝数据都开启的情况下指定使用蜂窝网络
# Performace: 在WiFi和蜂窝数据都开启的情况下使用最优的网络接口
# Balance: 在WiFi和蜂窝数据都开启的情况下，均衡使用网络接口
test-timeout = 2                                            # 测试超时时间（单位：秒）
disconnect-on-policy-change = false                         # 切换策略时是否断开已有连接（false 保持不断开）
switch-node-after-failure-times = 3                         # 连续失败多少次后切换节点
internet-test-url = http://captive.apple.com                
# 网络连通性测试 URL
proxy-test-url = http://www.gstatic.com/generate_204        
# 代理测试 URL 如果策略组没有自定义测试链接就会使用这里配置的
resource-parser = https://raw.githubusercontent.com/sub-store-org/Sub-Store/release/sub-store-parser.loon.min.js 
# 节点订阅/解析器
geoip-url = https://geodata.kelee.one/Country-Masaiki.mmdb  
# GeoIP 数据库（国家）
ipasn-url = https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb 
# ASN 数据库（自治系统）
skip-proxy = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local, e.crashlynatics.com 
# 跳过代理的地址（常见内网、保留地址、本地主机）
bypass-tun = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32 
# 绕过 TUN 的地址段（常见内网、保留地址、组播、广播）
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
ssid-trigger="default":rule,"cellular":rule,"LANnister Always Pays Debts":direct


[Proxy]  
# 单个代理节点配置区域  
# 在这里定义具体的代理服务器（如 SS / Vmess / Trojan 等）  
# 格式：名字 = 协议, 地址, 端口, 用户名/密码 或加密方式等参数  

[Remote Proxy]  
# 远程节点订阅配置  
# 用于从机场提供的订阅链接拉取节点信息  
# 格式：名字 = 订阅链接, 更新周期, 可选参数  

[Remote Filter]  
# 远程规则集过滤器  
# 可以对远程订阅的节点进行筛选（例如只保留某地区节点）  
# 格式：名字 = 订阅名字, 筛选条件（正则/关键字）  
# (?i)：表示后面整个括号内的表达式不区分大小写
HK = NameRegex, FilterKey = "^(?=.*((?i)🇭🇰|香港|(\b(HK|HKG|Hong)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
TW = NameRegex, FilterKey = "^(?=.*((?i)🇹🇼|台湾|(\b(TW|TWN|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
JP = NameRegex, FilterKey = "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|JPN|Japan)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
KR = NameRegex, FilterKey = "^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|KOR|Korea)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
SG = NameRegex, FilterKey = "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|SGP|Singapore)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
US = NameRegex, FilterKey = "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|USA|United States)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
GM = NameRegex, FilterKey = "^(?=.*((?i)游戏|🎮|(\b(GAME)(\d+)?\b)))(?!.*((?i)免费|下载|直连|回国|校园)).*$"
NE = NameRegex, FilterKey = '(?i)网易|音乐|解锁|Music|NetEase'
All = NameRegex, FilterKey = "^(?=.*(.))(?!.*((?i)免费|下载|群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|超时|收藏|福利|邀请|好友|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author|Traffic)(\d+)?\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$"

[Proxy Group]  
# 代理分组设置  
# 用来把多个节点/规则组合在一起，提供策略选择  
# 常见类型：  
#   select   → 手动选择节点  
#   url-test → 自动测速，选最快节点  
#   fallback → 按顺序尝试，失败自动切下一个  
#   load-balance → 负载均衡

# 漏网之鱼 推荐选择 Proxy
Final          = select, Proxy,DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

# 节点切换
Proxy          = select, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
Block          = select, REJECT, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AdBlack.png
banProgram     = select, REJECT, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AdBlack.png,
China          = select, DIRECT, Final, img-url =  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China_Map.png

# 业务分流组
AI             = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png
Speedtest      = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png
GitHub         = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png 
YouTube        = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png 
NETFLIX        = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png 
Disney         = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney.png 
TikTok         = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png 
Bahamut        = select, HongKong, TaiWan                                                            , img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bahamut.png
bilibili       = select, HongKong, TaiWan, DIRECT                                                    , img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png
Spotify        = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
NetEaseMusic   = select, Netease, DIRECT                                                             , img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png
Streaming      = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png 
Telegram       = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png 
X              = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/X.png 
Steam          = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Steam.png 
Games          = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png 

# 服务分流组
Apple          = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png 
Google         = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png 
OneDrive       = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/OneDrive.png 
Microsoft      = select, Proxy, HongKong, TaiWan, Japan, Korea, Singapore, America, AllServer, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Windows_11.png 
# 节点筛选 
HongKong       = select, HK-Auto, HK-FallBack, HK-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
TaiWan         = select, TW-Auto, TW-FallBack, TW-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
Japan          = select, JP-Auto, JP-FallBack, JP-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
Korea          = select, KR-Auto, KR-FallBack, KR-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
Singapore      = select, SG-Auto, SG-FallBack, SG-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
America        = select, US-Auto, US-FallBack, US-LoadBalance, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
GAME           = select, GM, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png
Netease        = select, NE, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netease.png
AllServer      = select, HK, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png

# 延时优选代理组
HK-Auto        = url-test, HK, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
TW-Auto        = url-test, TW, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
JP-Auto        = url-test, JP, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
KR-Auto        = url-test, KR, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
SG-Auto        = url-test, SG, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
US-Auto        = url-test, US, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
All-Auto       = url-test, All, interval = 60, tolerance = 50, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
# 故障转移代理组
HK-FallBack    = fallback, HK, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
TW-FallBack    = fallback, TW, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
JP-FallBack    = fallback, JP, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
KR-FallBack    = fallback, KR, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
SG-FallBack    = fallback, SG, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
US-FallBack    = fallback, US, interval = 60, max-timeout = 2000, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png 

# 负载均衡代理组
HK-LoadBalance = load-balance, HK, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
TW-LoadBalance = load-balance, TW, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
JP-LoadBalance = load-balance, JP, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
KR-LoadBalance = load-balance, KR, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
SG-LoadBalance = load-balance, SG, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
US-LoadBalance = load-balance, US, interval = 60, max-timeout = 2000, algorithm = pcc, img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png 
[Rule]  
# 规则设置  
# 定义不同流量的分流策略（走直连、走代理、还是拒绝）  
# 格式一般是：  
#   RULE-SET,规则集名称,策略组名称  
#   DOMAIN,域名,策略组  
#   IP-CIDR,IP段,策略组  
#   GEOIP,国家,策略组  
# Local Rule
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR,IP-CIDR6,IP-ASN
# Strategy:DIRECT,Proxy,REJECT
# Options:no-resolve(no-resolve(only for cidr))
# IP-CIDR, 192.168.0.0/16, DIRECT
# IP-CIDR, 10.0.0.0/8, DIRECT
# IP-CIDR, 172.16.0.0/12, DIRECT
# IP-CIDR, 127.0.0.0/8, DIRECT
# 当配置文件中没有任何有效策略组时，Loon将使用内置的PROXY策略组
# 当配置文件中存在有效的策略组时，内置的PROXY策略组将不再允许被调用，仅可使用用户配置的策略组
# 配置文件已自带远程GEOIP, cn, DIRECT规则，请勿在此添加
# 请勿修改远程CN REGION规则的排序甚至删除
# 信息收集
URL-REGEX,\.log\.,REJECT
# 兜底策略
FINAL,Final


[Remote Rule]
# 🚫 广告屏蔽 & 其他
https://adrules.top/adrules.list, policy=Block, tag=adrules.list, enabled=true
https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge2.txt, policy = Block, tag = anti-AD, enabled = true
https://raw.githubusercontent.com/fmz200/wool_scripts/main/Loon/rule/rejectAd.list, policy=Block, tag=广告拦截合集-规则@奶思, enabled=true
https://rule.kelee.one/Loon/OneDrive.lsr, policy = OneDrive, tag = OneDrive, enabled = true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list, policy = banProgram, tag = OBanProgramAD, enabled = true

# ✅ 测速/测试
https://rule.kelee.one/Loon/Speedtest.lsr, policy = Speedtest, tag = Speedtest, enabled = true

# ✅ AI 相关服务（优先代理）
https://kelee.one/Tool/Loon/Lsr/AI.lsr, policy = AI, tag = AI, enabled = true

# ✅ 流媒体服务
https://rule.kelee.one/Loon/Netflix.lsr, policy = NETFLIX, tag = Netflix, enabled = true
https://rule.kelee.one/Loon/YouTube.lsr, policy = YouTube, tag = Youtube, enabled = true
https://rule.kelee.one/Loon/Disney.lsr, policy = Disney, tag = Disney, enabled = true
https://rule.kelee.one/Loon/Spotify.lsr, policy = Spotify, tag = Spotify, enabled = true
https://rule.kelee.one/Loon/Bahamut.lsr, policy = Bahamut, tag = Bahamut, enabled = true
https://rule.kelee.one/Loon/BiliBili.lsr, policy = bilibili, tag = bilibili, enabled = true
# 哔哩哔哩东南亚
https://rule.kelee.one/Loon/BiliBiliIntl.lsr, policy = Streaming, tag = biliintl, enabled = true

# ✅ 常用国际服务
https://kelee.one/Tool/Loon/Lsr/TikTok.lsr, policy = TikTok, tag = TikTok, enabled = true
https://rule.kelee.one/Loon/Twitter.lsr, policy = X, tag = Twitter, enabled = true
https://rule.kelee.one/Loon/Facebook.lsr, policy = X, tag = Facebook, enabled = true
https://rule.kelee.one/Loon/Instagram.lsr, policy = X, tag = Instagram, enabled = true
https://rule.kelee.one/Loon/GitHub.lsr, policy = GitHub, tag = GitHub, enabled = true
https://kelee.one/Tool/Loon/Lsr/AppleAccount.lsr, policy = Apple, tag = Apple Account, enabled = true
https://kelee.one/Tool/Loon/Lsr/AppStore.lsr, policy = Apple, tag = App Store, enabled = false
https://rule.kelee.one/Loon/Telegram.lsr, policy = Telegram, tag = Telegram, enabled = true
https://rule.kelee.one/Loon/Microsoft.lsr, policy = Microsoft, tag = Microsoft, enabled = true
https://rule.kelee.one/Loon/Google.lsr, policy = Google, tag = Google, enabled = true

# 🎮 游戏平台
https://rule.kelee.one/Loon/Steam.lsr, policy = Steam, tag = Steam, enabled = true
https://rule.kelee.one/Loon/Game.lsr, policy = Game, tag = Game, enabled = true

https://kelee.one/Tool/Loon/Lsr/LAN_SPLITTER, policy = China, tag = LAN, enabled = true
https://kelee.one/Tool/Loon/Lsr/REGION_SPLITTER, policy = China, tag = CN REGION, enabled = true

[Host]
ssid:LANnister Always Pays Debts = server:10.10.2.2

[Rewrite]

[Script]

[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Fake_Vip.conf, tag=Fake-VIP, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag=Cookie.获取完一定要关闭, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Task.conf, tag=Task, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Script.conf, tag=Script, enabled=false

[Plugin]
https://kelee.one/Tool/Loon/Lpx/LoonGallery.lpx, policy = Final, enabled = true
https://kelee.one/Tool/Loon/Lpx/Block_HTTPDNS.lpx, enabled = true
https://kelee.one/Tool/Loon/Lpx/BlockAdvertisers.lpx, enabled = true
https://kelee.one/Tool/Loon/Lpx/Remove_ads_by_keli.lpx, enabled = true
https://kelee.one/Tool/Loon/Lpx/QuickSearch.lpx, enabled = true
https://kelee.one/Tool/Loon/Lpx/Prevent_DNS_Leaks.lpx, policy = Final, enabled = true
https://kelee.one/Tool/Loon/Lpx/Node_detection_tool.lpx, enabled = true
https://kelee.one/Tool/Loon/Lpx/TestFlightRegionUnlock.lpx, policy = China, enabled = true
https://kelee.one/Tool/Loon/Lpx/BoxJs.lpx, policy = Final, enabled = true
https://kelee.one/Tool/Loon/Lpx/Sub-Store.lpx, policy = Final, enabled = true
https://kelee.one/Tool/Loon/Lpx/Script-Hub.lpx, policy = Final, enabled = true

https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Advertising/Advertising.plugin, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin,enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, enabled=false

[Mitm]
hostname = 
ca-p12 = 
ca-passphrase = 
skip-server-cert-verify = false